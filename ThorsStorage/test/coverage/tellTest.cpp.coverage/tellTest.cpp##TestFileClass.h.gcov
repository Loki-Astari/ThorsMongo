        -:    0:Source:../test/TestFileClass.h
        -:    0:Graph:coverage/tellTest.gcno
        -:    0:Data:coverage/tellTest.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#ifndef THORSANVIL_FILESYSTEM_COLUMNFORMAT_TEST_TESTCLASS_H
        -:    2:#define THORSANVIL_FILESYSTEM_COLUMNFORMAT_TEST_TESTCLASS_H
        -:    3:
        -:    4:#include "gtest/gtest.h"
        -:    5:#include <stdexcept>
        -:    6:#include <fcntl.h>
        -:    7:
        -:    8:using namespace std::string_literals;
        -:    9:
        -:   10:static std::string const   testDataDir       = "runTestDir"s;
        -:   11:
        -:   12:static std::string const   testSecondOpenDir = "runTestDir/second"s;
        -:   13:
        -:   14:static std::string const   simpleIndex   = "/$index"s;
        -:   15:static std::string const   simpleP1Dir   = "/personOne"s;
        -:   16:static std::string const   simpleP1Name  = "/personOne/name"s;
        -:   17:static std::string const   simpleP1NameI = "/personOne/name.index"s;
        -:   18:static std::string const   simpleP1Age   = "/personOne/age"s;
        -:   19:static std::string const   simpleP2Dir   = "/personTwo"s;
        -:   20:static std::string const   simpleP2Name  = "/personTwo/name"s;
        -:   21:static std::string const   simpleP2NameI = "/personTwo/name.index"s;
        -:   22:static std::string const   simpleP2Age   = "/personTwo/age"s;
        -:   23:
        -:   24:static std::string const   simpleTestDir = "runTestDir/PersonData"s;
        -:   25:static std::string const   lockedTestDir = "runTestDir/lockedDir"s;
        -:   26:static std::string const   lockedFileDir = "runTestDir/openDir"s;
        -:   27:
        -:   28:// The fixture for testing class Foo.
        -:   29:class TestFileClass: public ::testing::Test
        -:   30:{
        -:   31:    public:
    #####:   32:        TestFileClass()
    #####:   33:        {
    #####:   34:            int checkPreCondition = access(testDataDir.c_str(), F_OK);
    #####:   35:            if (checkPreCondition == 0)
        -:   36:            {
        -:   37:                // Run Time Test Directory exists.
        -:   38:                // A previous test has failed to clean up correctly.
    #####:   39:                throw std::runtime_error("Test Directory Detected: It should not be there");
        -:   40:            }
    #####:   41:            mkdir(testDataDir.c_str(), 0'777);
    #####:   42:        }
    #####:   43:        ~TestFileClass()
    #####:   44:        {
    #####:   45:            remove(testDataDir.c_str());
    #####:   46:        }
        -:   47:};
        -:   48:
        -:   49:class TwoPeopleTest: public TestFileClass
        -:   50:{
        -:   51:    std::string fileNameBase;
        -:   52:    protected:
    #####:   53:        TwoPeopleTest(std::string const& fileNameBase)
    #####:   54:            : fileNameBase(fileNameBase)
    #####:   55:        {}
    #####:   56:        void TearDown() override
        -:   57:        {
    #####:   58:            chmod((fileNameBase + simpleP1Name ).c_str(), 0'777);
    #####:   59:            chmod((fileNameBase + simpleP1NameI).c_str(), 0'777);
    #####:   60:            chmod((fileNameBase + simpleP1Age  ).c_str(), 0'777);
    #####:   61:            chmod((fileNameBase + simpleP1Dir  ).c_str(), 0'777);
        -:   62:
    #####:   63:            chmod((fileNameBase + simpleP2Name ).c_str(), 0'777);
    #####:   64:            chmod((fileNameBase + simpleP2NameI).c_str(), 0'777);
    #####:   65:            chmod((fileNameBase + simpleP2Age  ).c_str(), 0'777);
    #####:   66:            chmod((fileNameBase + simpleP2Dir  ).c_str(), 0'777);
        -:   67:
    #####:   68:            chmod((fileNameBase + simpleIndex  ).c_str(), 0'777);
        -:   69:
    #####:   70:            chmod((fileNameBase                ).c_str(), 0'777);
        -:   71:
        -:   72:            // --
        -:   73:
    #####:   74:            remove((fileNameBase + simpleP1Name ).c_str());
    #####:   75:            remove((fileNameBase + simpleP1NameI).c_str());
    #####:   76:            remove((fileNameBase + simpleP1Age  ).c_str());
    #####:   77:            remove((fileNameBase + simpleP1Dir  ).c_str());
        -:   78:
    #####:   79:            remove((fileNameBase + simpleP2Name ).c_str());
    #####:   80:            remove((fileNameBase + simpleP2NameI).c_str());
    #####:   81:            remove((fileNameBase + simpleP2Age  ).c_str());
    #####:   82:            remove((fileNameBase + simpleP2Dir  ).c_str());
        -:   83:
    #####:   84:            remove((fileNameBase + simpleIndex  ).c_str());
        -:   85:
    #####:   86:            remove((fileNameBase                ).c_str());
    #####:   87:        }
        -:   88:};
        -:   89:
        -:   90:class SimpleTestDir: public TwoPeopleTest
        -:   91:{
        -:   92:    public:
    #####:   93:        SimpleTestDir()
    #####:   94:            : TwoPeopleTest(simpleTestDir)
    #####:   95:        {}
        -:   96:};
        -:   97:class LockedTestDir: public TwoPeopleTest
        -:   98:{
        -:   99:    public:
        -:  100:        LockedTestDir()
        -:  101:            : TwoPeopleTest(lockedTestDir)
        -:  102:        {}
        -:  103:        void SetUp() override
        -:  104:        {
        -:  105:            mkdir(lockedTestDir.c_str(), 0'000);
        -:  106:        }
        -:  107:};
        -:  108:class LockedFileDir: public TwoPeopleTest
        -:  109:{
        -:  110:    public:
        -:  111:        LockedFileDir()
        -:  112:            : TwoPeopleTest(lockedFileDir)
        -:  113:        {}
        -:  114:        void SetUp() override
        -:  115:        {
        -:  116:            mkdir(lockedFileDir.c_str(), 0'777);
        -:  117:            mkdir((lockedFileDir + simpleP2Dir).c_str(), 0'777);
        -:  118:            int fd = open((lockedFileDir + simpleP2Name).c_str(), O_RDWR | O_CREAT, 0'000);
        -:  119:            close(fd);
        -:  120:        }
        -:  121:};
        -:  122:
        -:  123:#endif
