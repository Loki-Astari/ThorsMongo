.TH libThorSerialize 3
.SH NAME
libThorSerialize \- Serialization library for Json/Yaml
.SH SYNOPSIS
.B #include "ThorSerialize/Trats.h"

 ThorsAnvil_MakeTraitCustom(DataType);
.SH DESCRIPTION
All the standard types read and write to the basic C++ types. But sometimes it is nice to write custom handlers. This declaration allows you to write a custom handler that will be used to serialize/deserialize a basic type. By basic type we mean (Null/Bool/Int/Float/String). This can be useful if you want to serialize a floating point number exactly (as a float will normally be read into a `double or float` which does not have an exact representation). Maybe your class can represent floating point numbers exactly to 11 decimal points.

Note the class must serialize to a standard string representation (otherwise the json or yaml will be broken).

    #include "ThorSerialize/JsonThor.h"
    #include "ThorSerialize/Traits.h"
    #include <iostream>

    class Location
    {
        int             xValue;
        int             yValue;
        friend std::ostream& operator<<(std::ostream& str, Location const& data) {
            return str << data.xValue << "." << data.yValue;
        }
        friend std::istream& operator<<(std::istream& str, Location& data) {
            Location tmp;
            char     pt = 'X';
            if (str >> tmp.xValue >> pt >> tmp.yValue && pt == '.') {
                data = tmp;
            }
            else {
                str.setstate(std::ios::failbit);
            }
            return str;
        }
    };
    ThorsAnvil_MakeTraitCustom(Location);

    class PointOfInterest
    {
        Location        loc;
        std::string     what;
        friend class ThorsAnvil::Serialize::Traits<PointOfInterest>;
    };
    ThorsAnvil_MakeTrait(PointOfInterest, loc, what);

    int main()
    {
         PointOfInterest    point{ Location{56,78}, "Plop" };

        std::cout << ThorsAnvil::Serialize::jsonExport(point) << "\n";
    }

.SH SEE ALSO
libThorSerialize jsonExport jsonImport yamlExport yamlImport ThorsAnvil_MakeTrait ThorsAnvil_ExpandTrait ThorsAnvil_Template_MakeTrait ThorsAnvil_Template_ExpandTrait ThorsAnvil_MakeEnum ThorsAnvil_MakeTraitCustom

.SH MORE INFO
https://github.com/Loki-Astari/ThorsSerializer

